import React, { useContext, useState } from 'react'
import TextEditor from './TextEditor'
import axios from 'axios'
import { userContext } from '../App'
import LoginRegister from '../UserDataAndAuthorization/LoginRegister'
import './StoryWriting.css'
axios.defaults.withCredentials = true

const StoryWriting = () => {
  const [storybase, setStorybase] = useState('')
  const [aiStory, setAistory] = useState(null)
  const [openaiApiKey, setOpenaikey] = useState(null)
  const [engine, setEngine] = useState(null)
  const [model, setModel] = useState(null)
  const [sizeofstory, setSizeofSTory] = useState(null)
  const user = useContext(userContext)
  const [title, setTitle] = useState(null)
  const [story, setStory] = useState(null)
  const [msg, setMsg] = useState(null)
  const [msg_type, setMsg_type] = useState(null)
  const handleGenerateStory = (e) => {
    e.preventDefault()
    if (storybase.length < 25) {
      alert("Enter Minimum 25 character")
    }
    else {
      axios.post(`http://localhost:8095/generate-story`, { storybase: storybase })
        .then(res => {
          setMsg(res.data.msg)
          setMsg_type(res.data.msg_type)
        })
        .catch(err => console.log(err))
    }
  }
  // console.log(user.file)
  const handleSubmitStory = (e) => {
    setStory(story)
    e.preventDefault()
    if (!title || !story) {
      // console.log("Enter the data completely please. . . .")
      alert("Enter the data completely please. . . .")
    }
    else {
      axios.post(`http://localhost:8095/upload-post/${title}/${user.file}`, { title: title, story: story })
        .then(res => {
          setMsg(res.data.msg)
          setMsg_type(res.data.msg_type)
        })
        .catch(err => console.log(err))
    }
  }

  return (
    <div className='w-100 text-dark shadow min-vh-100' style={{ backdropFilter: "blur(50px)" }}>
      {
        user.email ? <div className='bg-light container py-3 rounded'><h3>Write Your Fabulous Story . . .</h3>
          <div className='border px-3 py-4 shadow card'>
            {
              msg && <h4 className={`alert text-center ${msg_type === 'good' ? 'alert-success ' : 'alert-danger '}`}>{msg}</h4>
            }
            <div className='form-group text-dark'>
              <label className="card-header mb-1 fw-bold">Title of the Story</label>
              <input className='form-control' type="text" onChange={e => setTitle(e.target.value)} />
            </div>
            <hr />
            <div className='my-4'>
              <label className='fw-bold card-header mb-1'>Your Story</label>
              <TextEditor aiStory={aiStory} setStory={setStory} story={story} />
            </div>
            <button className='btn btn-primary w-100' onClick={handleSubmitStory}>Submit Story</button>
          </div>
          {/* <div className='mt-5 border shadow card px-3 py-4 hoverMe'>
            <center className='mb-3 fs-3 fw-bold'>Ai Generated Story Using OpenAI</center>
            <label className="fw-bold">Data to Create Story</label>
            <input className='form-control my-3' placeholder='Enter some information so that AI can generate the Story for you . . . ' onChange={e => setStorybase(e.target.value)} />
            <label className="fw-bold">OpenAI API key</label>
            <input className='form-control my-3' placeholder='Enter Open Ai Api Key It will be generated By Open AI to use API ("sk-rsXlJ53....a1kIweXnC66U") ' onChange={e => setOpenaikey(e.target.value)} />
            <div className='d-flex justify-content-between mt-3'>
              <div>
                <label className="fw-bold">Engine Details</label>
                <input className='form-control my-1' placeholder='Enter Engine Details ("text-davinci-002"). . . ' onChange={e => setEngine(e.target.value)} />
              </div>
              <div>
                <label className="fw-bold">Model Details</label>
                <input className='form-control my-1' placeholder='Enter Model ("text-davinci-002"). . . ' onChange={e => setModel(e.target.value)} />

              </div>
              <div>
                <label className="fw-bold">Size of Story</label>
                <input className='form-control my-1' placeholder='Enter Max Size of the Story (200) . . . ' onChange={e => setSizeofSTory(e.target.value)} />
              </div>
            </div>
            <center><button className='btn btn-primary mt-3' onClick={handleGenerateStory}>Generate Story</button></center>
          </div> */}
        </div> : <LoginRegister />
      }
    </div>
  )
}

export default StoryWriting

